{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red13\green108\blue175;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\margl1440\margr1440\vieww15380\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf2 \expnd0\expndtw0\kerning0
Readings
\b0 \'a0\

\b Drawing Tutorial
\b0 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.raywenderlich.com/90690/modern-core-graphics-with-swift-part-1"}}{\fldrslt \cf3 https://www.raywenderlich.com/90690/modern-core-graphics-with-swift-part-1}}\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.raywenderlich.com/90693/modern-core-graphics-with-swift-part-2"}}{\fldrslt \cf3 https://www.raywenderlich.com/90693/modern-core-graphics-with-swift-part-2}}\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.raywenderlich.com/90693/modern-core-graphics-with-swift-part-3"}}{\fldrslt \cf3 https://www.raywenderlich.com/90695/modern-core-graphics-with-swift-part-3}}\
\pard\pardeftab720\partightenfactor0

\b \cf2 Drawing with Views
\b0 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://developer.apple.com/library/ios/documentation/WindowsViews/Conceptual/ViewPG_iPhoneOS/CreatingViews/CreatingViews.html"}}{\fldrslt \cf3 https://developer.apple.com/library/ios/documentation/WindowsViews/Conceptual/ViewPG_iPhoneOS/CreatingViews/CreatingViews.html}}\
\pard\pardeftab720\partightenfactor0

\b \cf2 UIResponder Class Reference
\b0 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://developer.apple.com/reference/uikit/uiresponder"}}{\fldrslt \cf3 https://developer.apple.com/reference/uikit/uiresponder}}\
\pard\pardeftab720\partightenfactor0

\b \cf2 UIView Class Reference
\b0 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://developer.apple.com/reference/uikit/UIVIew"}}{\fldrslt \cf3 https://developer.apple.com/reference/uikit/UIVIew}}\
\'a0
\b Optional Readings:
\b0 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://pomax.github.io/bezierinfo/"}}{\fldrslt \cf3 http://pomax.github.io/bezierinfo/}} (The Lightning Introduction Part)\
\pard\pardeftab720\partightenfactor0

\b \cf2 Assignment 3
\b0 \
1. Create a swift enum called CellState with the following (10 points)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
case values: Living, Empty, Born, Died\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Give the enum a raw type of String\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Assign the name of the case as the String value for each case\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
equip the enum with a description method which uses a switch statement to hand back the raw value\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
equip the enum with an allValues method which returns an array of all available values for the enum\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
equip the enum with a method toggle(value:CellState)-> CellState which when passed .Empty or .Died, returns .Living, when passed .Living or .Born returns .Empty\
\pard\pardeftab720\partightenfactor0
\cf2 2. Create a subclass of UIVIew called GridView which has the following characteristics (5 points):\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Is IBDesignable\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Has the following IBInspectable Properties:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
2 Integers: rows and cols (defaulting to 20 and 20, respectively)\
\ls2\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
4 UIColors: livingColor, emptyColor, bornColor, diedColor, gridColor (pick defaults)\
\ls2\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
CGFloat\'a0 gridWidth\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Has the following normal characteristic:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
a 2-d array of CellState values called grid which is reinitialized to all .Empty values every time that rows or cols changes using the didSet keyword on the rows and cols values.\
\pard\pardeftab720\partightenfactor0
\cf2 3. Instantiate a GridView in the Main.storyboard of Assignment3 and (5 points)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Assign the following values for all of the above properties in the storyboard\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Use these values: rows: 20, cols: 20, livingColor = some green, bornColor = same shade of green with .6 alpha,\'a0 emptyColor = darkGray, diedColor = same shade of grey\'a0 with\'a0 .6 alpha, gridColor = black, gridWidth = 2.0\
\pard\pardeftab720\partightenfactor0
\cf2 4. implement a drawRect: method for GridView which (40 points)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
draws the correct set of grid lines in the view using the techniques shown in class.\'a0 Do not redraw the entire grid every time, only draw the part of the grid required by the passed-in rect and for set the gridlines to have width as specified in the gridWidth property and color as in gridColor\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
draws a circle inside of every grid cell and fills the circle with the appropriate color for the grid cell drawn from the grid array. \'a0e.g. for grid cell (0,0) fetch the zero'th array from grid and then fetch the CellState value from the zero'th position of the array and color the circle using the color specified in IB. Repeat for the other values\
\pard\pardeftab720\partightenfactor0
\cf2 5. Using touch handling techniques shown in class\'a0 and\'a0 the toggle method of CellState, toggle the value of a\'a0 touched cell from Empty to Living or from Living to Empty depending the current state of the cell and cause a redisplay to happen (20 points)\
6. Add a button as in Assignment 2 which will iterate the grid when pressed using modified versions of your code from assignment 2 for step() and neighbors() (20 points)}